{"version":3,"sources":["logic/utils.js","apps/Tuner/components/TunerDisplayCanvas.js","apps/Tuner/components/TunerPointerCanvas.js","components/AudioInput/AudioInput.js","events/EventHandler.js","events/Events.js","components/AudioSettings/AudioSettings.js","components/AudioSettings/AudioSettingsUtils.js","logic/PitchDetectors/AutoCorrelation.js","logic/Notes.js","apps/Tuner/components/TunerAudio.js","apps/Tuner/styles.js","components/Overlay/Overlay.js","components/MicrophonePermissions/MicrophonePermissions.js","apps/Tuner/Tuner.js","components/utils.js","components/Timer/Timer.js","components/Countdown/Countdown.js","components/ListView/styles.js","components/ListView/ListView.js","apps/NotePractice/components/NotePracticeAudio.js","components/Button/Button.js","apps/NotePractice/NotePractice.js","components/Sidebar/Sidebar.js","pages/MainPage/MainPage.js","App.js","serviceWorker.js","index.js"],"names":["noteNames","calculateFreq","noteName","dist","n1","n2","n1Octave","Number","substr","length","n2Octave","n1Index","indexOf","stepDistance","scale","value","min","max","newMin","newMax","getRandomNote","noteList","useOctaves","notes","Object","values","filter","note","name","endsWith","Math","floor","random","calculateSoundLevel","e","data","inputBuffer","getChannelData","meanValue","forEach","v","abs","sqrt","TunerDisplayCanvas","props","id","width","height","TunerPointerCanvas","AudioInput","handleAudio","undefined","selectedDevice","window","navigator","mediaDevices","getUserMedia","audio","deviceId","video","then","stream","disconnectScriptNodes","scriptNodes","context","AudioContext","source","createMediaStreamSource","processors","processor","scriptProcessor","createScriptProcessor","bufferSize","push","connect","destination","onaudioprocess","process","prevProps","this","arr1","arr2","i","arraysEqual","map","p","hash","node","disconnect","React","Component","defaultProps","EventHandler","handlers","event","keys","registree","callbacks","callback","SoundLevelChanged","HorizontalLayout","styled","div","AudioSettings","getCanvasThresholdCoordinates","threshold","canvasWidth","thresholdPoint","x1","boxWidth","x2","getCanvasMouseCoordinates","mouseX","document","getElementById","getBoundingClientRect","x","getMouseOnThresholdBar","canvas","canvasX","thresholdXBounds","state","onCanvasMouseMove","thresholdBarDrag","newThreshold","pageX","setState","onThresholdChange","onCanvasMouseDown","onCanvasMouseOut","devices","soundLevel","enumerateDevices","d","kind","uuid","register","unregister","canvasContext","getContext","fillStyle","beginPath","clearRect","fillRect","stroke","setSoundLevel","drawThresholdBar","Typography","variant","Select","aria-labelledby","onChange","onDeviceChange","device","index","MenuItem","key","label","toFixed","onMouseMove","onMouseDown","onMouseOut","onMouseUp","PureComponent","findWavelength","signal","startIndex","endIndex","autocorr","lag","sum","autocorrelation","valleyLag","maxIndex","maxValue","detectFrequency","samplingRate","msStepSize","frequencies","stepSizeInSamples","round","processedSamples","a","frequency","Note","freq","log2","Notes","minOctave","maxOctave","noteNameWithOctave","calculateAllNotes","getNote","diffs","TunerAudio","soundLevelThreshold","trigger","sampleRate","diff","centDiff","audioProcessed","target","TunerDivStyle","display","flexDirection","justifyContent","TunerCanvasSize","TunerDisplaySettings","minVal","maxVal","stepSize","widthPadding","font","fontSize","topPadding","strokeColor","lineWIdth","TunerPointerSettings","pointerHeight","pointerWidth","OverlayDivStyle","position","backgroundColor","zIndex","alignItems","Overlay","calculateStyle","br","boundingRect","enabled","style","message","children","MicrophonePermissions","permissionsGranted","catch","Tuner","noteChanged","tunerPointerCanvas","point","settings","tunerLineX","triangleHalfSide","strokeStyle","moveTo","lineTo","fill","closePath","drawTunerPointer","getNoteString","centDiffStr","toString","dotIndex","lineWidth","textAlign","startingPoint","fillText","drawTunerDisplay","timeToString","time","isNaN","diffInHrs","diffInMin","mm","diffInSec","ss","diffInMs","ms","formattedMM","padStart","formattedSS","formattedMS","Timer","calculateElapsedTime","Date","now","startTime","elapsedTime","elapsedTimeChanged","updateInterval","setInterval","clearInterval","Countdown","updateValue","start","end","currentValue","step","newValue","countdownInterval","valueChanged","interval","ListViewStyle","overflowY","overflowX","ListView","className","items","NotePracticeAudio","BaseButton","button","Button","disabled","type","onClick","text","NotePractice","noteDetected","currentNote","lastElapsedTime","notesHit","stopped","baseNoteName","notesHitList","noteHit","whiteSpace","fontFamily","String","padEnd","reverse","controlButtonClicked","starting","stop","noteDetectedLock","align","paddingLeft","paddingRight","maxHeight","flexGrow","getNoteSwitcher","SidebarButtons","SidebarButton","SidebarButtonIcon","FontAwesomeIcon","attrs","Sidebar","buttonClicked","activeButton","selectionChanged","getButtonClassName","borderRight","borderRadius","icon","faGuitar","faMusic","PaddedContainer","Container","MainPage","Paper","marginLeft","padding","App","Boolean","location","hostname","match","ReactDOM","render","serviceWorker","ready","registration"],"mappings":"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","file":"static/js/main.ccadafc9.chunk.js","sourcesContent":["const noteNames = [\"C\", \"C#\", \"D\", \"D#\", \"E\", \"F\", \"F#\", \"G\", \"G#\", \"A\", \"A#\", \"B\"];\r\n\r\nfunction stepDistance(n1, n2) {\r\n  const n1Octave = Number(n1.substr(n1.length - 1));\r\n  const n2Octave = Number(n2.substr(n2.length - 1));\r\n\r\n  const n1Index =\r\n    noteNames.indexOf(n1.substr(0, n1.length - 1)) + noteNames.length * (n1Octave - 1);\r\n  const n2Index =\r\n    noteNames.indexOf(n2.substr(0, n2.length - 1)) + noteNames.length * (n2Octave - 1);\r\n\r\n  return n2Index - n1Index;\r\n}\r\n\r\nfunction calculateFreq(noteName) {\r\n  const baseNote = \"A4\";\r\n  const baseFreq = \"440\";\r\n\r\n  const dist = stepDistance(baseNote, noteName);\r\n  const freq = baseFreq * 2 ** (dist / 12);\r\n\r\n  return freq;\r\n}\r\n\r\nfunction scale(value, min, max, newMin, newMax) {\r\n  const scaledValue = newMin + ((value - min) * (newMax - newMin)) / (max - min);\r\n  return scaledValue;\r\n}\r\n\r\nfunction getRandomInteger(min, max) {\r\n  return Math.floor(Math.random() * (max - min + 1)) + min;\r\n}\r\n\r\nfunction getRandomNote(noteList, useOctaves = true) {\r\n  let notes = Object.values(noteList);\r\n  if (!useOctaves) {\r\n    notes = notes.filter(note => note.name.endsWith(\"3\"));\r\n  }\r\n\r\n  return notes[getRandomInteger(0, notes.length - 1)];\r\n}\r\n\r\nfunction calculateSoundLevel(e) {\r\n  const data = e.inputBuffer.getChannelData(0);\r\n\r\n  let meanValue = 0;\r\n  data.forEach(v => (meanValue += Math.abs(v)));\r\n  meanValue /= data.length;\r\n  const soundLevel = Math.sqrt(meanValue); // [0, 1]\r\n\r\n  return soundLevel;\r\n}\r\n\r\nexport {\r\n  noteNames,\r\n  stepDistance,\r\n  calculateFreq,\r\n  scale,\r\n  getRandomNote,\r\n  getRandomInteger,\r\n  calculateSoundLevel,\r\n};\r\n","import React from \"react\";\r\nimport { scale } from \"../../../logic/utils\";\r\n\r\nfunction drawTunerDisplay(canvas, settings) {\r\n  const {\r\n    minVal,\r\n    maxVal,\r\n    stepSize,\r\n    widthPadding,\r\n    topPadding,\r\n    fontSize,\r\n    font,\r\n    strokeColor,\r\n    lineWidth,\r\n  } = settings;\r\n\r\n  const context = canvas.getContext(\"2d\");\r\n  context.clearRect(0, 0, canvas.width, canvas.height);\r\n\r\n  const { width, height } = canvas;\r\n\r\n  context.strokeStyle = strokeColor;\r\n  context.lineWidth = lineWidth;\r\n  context.textAlign = \"center\";\r\n  context.font = `${fontSize}px ${font}`;\r\n\r\n  context.beginPath();\r\n  for (let i = minVal; i <= maxVal; i += stepSize) {\r\n    const startingPoint = scale(i, -50, 50, 0 + widthPadding, width - widthPadding);\r\n    if (i % 10 === 0) {\r\n      context.moveTo(startingPoint + 0.5, topPadding);\r\n      context.lineTo(startingPoint + 0.5, height);\r\n      context.fillText(i, startingPoint + 0.5, fontSize);\r\n    } else {\r\n      context.moveTo(startingPoint + 0.5, topPadding + (height - topPadding) / 4);\r\n      context.lineTo(startingPoint + 0.5, topPadding + (3 * (height - topPadding)) / 4);\r\n    }\r\n  }\r\n  context.closePath();\r\n  context.stroke();\r\n}\r\n\r\nconst TunerDisplayCanvas = props => (\r\n  <canvas id=\"tunerDisplay\" width={props.width} height={props.height} />\r\n);\r\n\r\nexport { TunerDisplayCanvas, drawTunerDisplay };\r\n","import React from \"react\";\r\nimport { scale } from \"../../../logic/utils\";\r\n\r\nfunction drawTunerPointer(canvas, point, settings) {\r\n  const context = canvas.getContext(\"2d\");\r\n  context.clearRect(0, 0, canvas.width, canvas.height);\r\n\r\n  const { width } = canvas;\r\n  const { widthPadding, strokeColor, topPadding, pointerHeight, pointerWidth } = settings;\r\n\r\n  const tunerLineX = scale(point, -50, 50, 0 + widthPadding, width - widthPadding);\r\n  const triangleHalfSide = pointerWidth / 2;\r\n\r\n  context.strokeStyle = strokeColor;\r\n  context.fillStyle = strokeColor;\r\n\r\n  context.beginPath();\r\n  context.moveTo(tunerLineX + 0.5, topPadding);\r\n  context.lineTo(tunerLineX + 0.5, pointerHeight);\r\n\r\n  context.lineTo(tunerLineX + 0.5 - triangleHalfSide, pointerHeight);\r\n  context.lineTo(tunerLineX + 0.5, topPadding);\r\n\r\n  context.moveTo(tunerLineX + 0.5, topPadding + pointerHeight);\r\n\r\n  context.lineTo(tunerLineX + 0.5 + triangleHalfSide, pointerHeight);\r\n  context.lineTo(tunerLineX + 0.5, topPadding);\r\n\r\n  context.fill();\r\n\r\n  context.closePath();\r\n  context.stroke();\r\n}\r\n\r\nconst TunerPointerCanvas = props => (\r\n  <canvas id=\"tunerPointer\" width={props.width} height={props.height} />\r\n);\r\n\r\nexport { TunerPointerCanvas, drawTunerPointer };\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nfunction arraysEqual(arr1, arr2) {\r\n  if (arr1.length !== arr2.length) return false;\r\n  for (let i = 0; i < arr1.length; i += 1) {\r\n    if (arr1[i] !== arr2[i]) return false;\r\n  }\r\n  return true;\r\n}\r\n\r\nclass AudioInput extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.context = undefined;\r\n    this.source = undefined;\r\n    this.scriptNodes = [];\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (\r\n      this.props.selectedDevice !== prevProps.selectedDevice ||\r\n      !arraysEqual(this.props.processors.map(p => p.hash), prevProps.processors.map(p => p.hash))\r\n    )\r\n      this.handleAudio();\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.disconnectScriptNodes();\r\n  }\r\n\r\n  handleAudio = () => {\r\n    if (this.props.selectedDevice === undefined) return;\r\n\r\n    window.navigator.mediaDevices\r\n      .getUserMedia({ audio: { deviceId: this.props.selectedDevice }, video: false })\r\n      .then(stream => {\r\n        this.disconnectScriptNodes();\r\n        this.scriptNodes = [];\r\n\r\n        this.context = new AudioContext();\r\n        this.source = this.context.createMediaStreamSource(stream);\r\n        this.props.processors.forEach(processor => {\r\n          const scriptProcessor = this.context.createScriptProcessor(processor.bufferSize, 1, 1);\r\n          this.scriptNodes.push(scriptProcessor);\r\n\r\n          this.source.connect(scriptProcessor);\r\n          scriptProcessor.connect(this.context.destination);\r\n\r\n          scriptProcessor.onaudioprocess = e => {\r\n            processor.process(e);\r\n          };\r\n        });\r\n      });\r\n  };\r\n\r\n  disconnectScriptNodes() {\r\n    if (this.context !== undefined && this.source !== undefined) {\r\n      this.scriptNodes.forEach(node => {\r\n        this.source.disconnect(node);\r\n        node.disconnect(this.context.destination);\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return <></>;\r\n  }\r\n}\r\n\r\nAudioInput.propTypes = {\r\n  selectedDevice: PropTypes.string,\r\n  processors: PropTypes.arrayOf(PropTypes.object),\r\n};\r\n\r\nAudioInput.defaultProps = {\r\n  selectedDevice: undefined,\r\n  processors: [],\r\n};\r\n\r\nexport default AudioInput;\r\n","class _EventHandler {\r\n  constructor() {\r\n    this.handlers = {};\r\n  }\r\n\r\n  trigger(event, data) {\r\n    if (this.handlers[event] !== undefined) {\r\n      Object.keys(this.handlers[event]).forEach(registree => {\r\n        const callbacks = this.handlers[event][registree];\r\n        if (callbacks === undefined) return; // In case of asynchronous unregistering\r\n        callbacks.forEach(callback => {\r\n          callback(data);\r\n        });\r\n      });\r\n    }\r\n  }\r\n\r\n  register(event, registree, callback) {\r\n    if (this.handlers[event] === undefined) {\r\n      this.handlers[event] = {};\r\n    }\r\n\r\n    if (this.handlers[event][registree] === undefined) {\r\n      this.handlers[event][registree] = [];\r\n    }\r\n\r\n    this.handlers[event][registree].push(callback);\r\n  }\r\n\r\n  unregister(event, registree) {\r\n    if (this.handlers[event] !== undefined) {\r\n      if (this.handlers[event][registree] !== undefined) {\r\n        this.handlers[event][registree] = undefined;\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nconst EventHandler = new _EventHandler();\r\n\r\nexport default EventHandler;\r\n","const SoundLevelChanged = \"soundLevelChanged\";\r\n\r\nexport default SoundLevelChanged;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Select, MenuItem, Typography } from \"@material-ui/core\";\r\nimport PropTypes from \"prop-types\";\r\nimport uuid from \"react-uuid\";\r\nimport EventHandler from \"../../events/EventHandler\";\r\nimport SoundLevelChanged from \"../../events/Events\";\r\nimport { scale } from \"../../logic/utils\";\r\n\r\nimport { setSoundLevel, drawThresholdBar } from \"./AudioSettingsUtils\";\r\n\r\nconst HorizontalLayout = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n  padding: 16px;\r\n`;\r\n\r\nclass AudioSettings extends React.PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = { devices: [], soundLevel: 0, threshold: 0.2, thresholdBarDrag: false };\r\n    const { mediaDevices } = window.navigator;\r\n    if (mediaDevices !== undefined) {\r\n      mediaDevices.enumerateDevices().then(devices => {\r\n        this.setState({ devices: devices.filter(d => d.kind === \"audioinput\") });\r\n      });\r\n    }\r\n\r\n    this.uuid = uuid();\r\n    EventHandler.register(SoundLevelChanged, this.uuid, soundLevel =>\r\n      this.setState({ soundLevel }),\r\n    );\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    EventHandler.unregister(SoundLevelChanged, this.uuid);\r\n  }\r\n\r\n  getCanvasThresholdCoordinates = (threshold, canvasWidth) => {\r\n    const boxWidth = 4;\r\n    const thresholdPoint = threshold * canvasWidth;\r\n\r\n    return { x1: thresholdPoint - boxWidth / 2, x2: thresholdPoint + boxWidth / 2 };\r\n  };\r\n\r\n  getCanvasMouseCoordinates = mouseX => {\r\n    const canvas = document.getElementById(\"volumeLevel\");\r\n    const boundingRect = canvas.getBoundingClientRect();\r\n\r\n    const canvasX = mouseX - boundingRect.x;\r\n\r\n    return canvasX;\r\n  };\r\n\r\n  getMouseOnThresholdBar = mouseX => {\r\n    const canvas = document.getElementById(\"volumeLevel\");\r\n\r\n    const canvasX = this.getCanvasMouseCoordinates(mouseX);\r\n\r\n    const thresholdXBounds = this.getCanvasThresholdCoordinates(this.state.threshold, canvas.width);\r\n    if (canvasX >= thresholdXBounds.x1 && canvasX <= thresholdXBounds.x2) {\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  };\r\n\r\n  onCanvasMouseMove = e => {\r\n    if (this.state.thresholdBarDrag) {\r\n      const canvas = document.getElementById(\"volumeLevel\");\r\n      const mouseX = this.getCanvasMouseCoordinates(e.pageX);\r\n      const newThreshold = scale(mouseX, 0, canvas.width, 0, 1);\r\n      this.setState({ threshold: newThreshold }, () => {\r\n        this.props.onThresholdChange(newThreshold);\r\n      });\r\n    }\r\n  };\r\n\r\n  onCanvasMouseDown = e => {\r\n    if (this.getMouseOnThresholdBar(e.pageX)) {\r\n      this.setState({ thresholdBarDrag: true });\r\n    }\r\n  };\r\n\r\n  onCanvasMouseOut = e => {\r\n    this.setState({ thresholdBarDrag: false });\r\n  };\r\n\r\n  render() {\r\n    setSoundLevel(this.state.soundLevel);\r\n    drawThresholdBar(this.state.threshold);\r\n\r\n    return (\r\n      <div>\r\n        <Typography variant=\"h6\">Audio Setup</Typography>\r\n        <HorizontalLayout>\r\n          <div>\r\n            <Typography id=\"inputSourceLabel\">Input Source</Typography>\r\n            <Select\r\n              id=\"audioInputSource\"\r\n              aria-labelledby=\"inputSourceLabel\"\r\n              value={this.props.selectedDevice}\r\n              onChange={this.props.onDeviceChange}\r\n            >\r\n              {this.state.devices.map((device, index) => {\r\n                return (\r\n                  <MenuItem key={device.deviceId} value={device.deviceId}>\r\n                    {`${index} ${device.label}`}\r\n                  </MenuItem>\r\n                );\r\n              })}\r\n            </Select>\r\n          </div>\r\n          <div>\r\n            <Typography id=\"inputVolumeLabel\">\r\n              Input Volume - Threshold: {(100 * this.state.threshold).toFixed(2)}%\r\n            </Typography>\r\n            <canvas\r\n              height=\"24\"\r\n              id=\"volumeLevel\"\r\n              aria-labelledby=\"inputVolumeLabel\"\r\n              onMouseMove={this.onCanvasMouseMove}\r\n              onMouseDown={this.onCanvasMouseDown}\r\n              onMouseOut={this.onCanvasMouseOut}\r\n              onMouseUp={this.onCanvasMouseOut}\r\n            />\r\n          </div>\r\n        </HorizontalLayout>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nAudioSettings.propTypes = {\r\n  selectedDevice: PropTypes.string,\r\n  onDeviceChange: PropTypes.func,\r\n  onThresholdChange: PropTypes.func,\r\n};\r\n\r\nAudioSettings.defaultProps = {\r\n  selectedDevice: undefined,\r\n  onDeviceChange: () => {},\r\n  onThresholdChange: () => {},\r\n};\r\n\r\nexport default AudioSettings;\r\n","import { scale } from \"../../logic/utils\";\r\n\r\nfunction setSoundLevel(soundLevel) {\r\n  const canvas = document.getElementById(\"volumeLevel\");\r\n  if (canvas === null) {\r\n    return;\r\n  }\r\n  const { width } = canvas;\r\n  const canvasContext = canvas.getContext(\"2d\");\r\n  const boxWidth = scale(soundLevel, 0, 1, 0, width);\r\n  canvasContext.fillStyle = \"#be4bdb\";\r\n  canvasContext.beginPath();\r\n  canvasContext.clearRect(0, 0, canvas.width, canvas.height);\r\n  canvasContext.fillRect(0, 0, boxWidth, canvas.height);\r\n  canvasContext.stroke();\r\n}\r\n\r\nfunction drawThresholdBar(threshold) {\r\n  const canvas = document.getElementById(\"volumeLevel\");\r\n  if (canvas === null) {\r\n    return;\r\n  }\r\n  const boxWidth = 4;\r\n  const { width } = canvas;\r\n  const canvasContext = canvas.getContext(\"2d\");\r\n  const thresholdPoint = threshold * width;\r\n\r\n  canvasContext.fillStyle = \"#00aa00\";\r\n  canvasContext.beginPath();\r\n  canvasContext.fillRect(thresholdPoint - boxWidth / 2, 0, boxWidth, canvas.height);\r\n  canvasContext.stroke();\r\n}\r\n\r\nexport { setSoundLevel, drawThresholdBar };\r\n","function autocorrelation(signal, start = undefined, end = undefined) {\r\n  let startIndex = start;\r\n  let endIndex = end;\r\n\r\n  if (startIndex === undefined) startIndex = 0;\r\n  if (endIndex === undefined) endIndex = signal.length;\r\n\r\n  const autocorr = [];\r\n\r\n  for (let lag = startIndex; lag < endIndex; lag += 1) {\r\n    let sum = 0;\r\n    for (let i = startIndex; i < endIndex; i += 1) {\r\n      sum += signal[i] * (i + lag < endIndex ? signal[i + lag] : 0);\r\n    }\r\n    autocorr.push(sum);\r\n  }\r\n\r\n  return autocorr;\r\n}\r\n\r\nfunction findWavelength(signal, start = undefined, end = undefined) {\r\n  let startIndex = start;\r\n  let endIndex = end;\r\n\r\n  if (startIndex === undefined) startIndex = 0;\r\n  if (endIndex === undefined) endIndex = signal.length;\r\n\r\n  const autocorr = autocorrelation(signal, startIndex, endIndex);\r\n\r\n  let valleyLag = 1;\r\n  for (let i = 1; i < autocorr.length; i += 1) {\r\n    if (autocorr[i] - autocorr[i - 1] < 0) valleyLag = i;\r\n    else break;\r\n  }\r\n\r\n  let maxIndex = valleyLag;\r\n  let maxValue = autocorr[valleyLag];\r\n  if (valleyLag === undefined) valleyLag = 1;\r\n\r\n  for (let i = valleyLag; i < autocorr.length; i += 1) {\r\n    if (autocorr[i] > maxValue) {\r\n      maxValue = autocorr[i];\r\n      maxIndex = i;\r\n    }\r\n  }\r\n\r\n  return maxIndex;\r\n}\r\n\r\nfunction detectFrequency(audio, samplingRate, msStepSize = undefined) {\r\n  const frequencies = [];\r\n\r\n  const stepSizeInSamples =\r\n    msStepSize === undefined ? audio.length : Math.round((msStepSize * samplingRate) / 1000);\r\n\r\n  let processedSamples = 0;\r\n\r\n  while (processedSamples < audio.length) {\r\n    const a = [];\r\n\r\n    for (let i = 0; i < stepSizeInSamples; i += 1) {\r\n      a[i] = audio[processedSamples + i];\r\n    }\r\n\r\n    const maxIndex = findWavelength(a);\r\n\r\n    const frequency = samplingRate / maxIndex;\r\n    // const time = processedSamples / samplingRate;\r\n\r\n    frequencies.push(frequency);\r\n    processedSamples += stepSizeInSamples;\r\n  }\r\n\r\n  return frequencies;\r\n}\r\n\r\nexport default detectFrequency;\r\n\r\n// const getFileBlob = function(url, cb) {\r\n//   const xhr = new XMLHttpRequest();\r\n//   xhr.open(\"GET\", url);\r\n//   xhr.responseType = \"blob\";\r\n//   xhr.addEventListener(\"load\", function() {\r\n//     cb(xhr.response);\r\n//   });\r\n//   xhr.send();\r\n// };\r\n\r\n// getFileBlob(\"A_major_scale.wav\", r => {\r\n//   const reader = new FileReader();\r\n//   reader.onloadend = function(e) {\r\n//     const context = new (window.AudioContext || window.webkitAudioContext)();\r\n//     context.decodeAudioData(reader.result, buffer => {\r\n//       const pitchDetector = new AutoCorrelation();\r\n//       pitchDetector.detect(buffer.getChannelData(0), buffer.sampleRate, 10);\r\n//     });\r\n//   };\r\n//   reader.readAsArrayBuffer(r);\r\n// });\r\n","import { calculateFreq, noteNames } from \"./utils\";\r\n\r\nclass Note {\r\n  constructor(name) {\r\n    this.name = name;\r\n    this.freq = calculateFreq(name);\r\n  }\r\n\r\n  centDiff(freq) {\r\n    const diff = 1200 * Math.log2(freq / this.freq);\r\n    return diff;\r\n  }\r\n\r\n  baseNoteName() {\r\n    return this.name.substr(0, this.name.length - 1);\r\n  }\r\n}\r\n\r\nfunction calculateAllNotes(minOctave = 1, maxOctave = 5) {\r\n  const notes = {};\r\n\r\n  for (let i = minOctave; i <= maxOctave; i += 1) {\r\n    noteNames.forEach(noteName => {\r\n      const noteNameWithOctave = `${noteName}${i}`;\r\n      notes[noteNameWithOctave] = new Note(noteNameWithOctave);\r\n    });\r\n  }\r\n\r\n  return notes;\r\n}\r\n\r\nconst Notes = calculateAllNotes(2, 6);\r\n\r\nfunction getNote(frequency) {\r\n  const notes = Object.values(Notes);\r\n\r\n  const diffs = notes.map(note => Math.abs(note.freq - frequency));\r\n  return notes[diffs.indexOf(Math.min(...diffs))];\r\n}\r\n\r\nexport { Note, Notes, getNote };\r\n","import React from \"react\";\r\nimport AudioInput from \"../../../components/AudioInput/AudioInput\";\r\nimport AudioSettings from \"../../../components/AudioSettings/AudioSettings\";\r\nimport { calculateSoundLevel } from \"../../../logic/utils\";\r\nimport detectFrequency from \"../../../logic/PitchDetectors/AutoCorrelation\";\r\nimport { getNote } from \"../../../logic/Notes\";\r\nimport EventHandler from \"../../../events/EventHandler\";\r\nimport SoundLevelChanged from \"../../../events/Events\";\r\n\r\nclass TunerAudio extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { selectedDevice: \"\", soundLevelThreshold: 0.2 };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <AudioInput\r\n          selectedDevice={this.state.selectedDevice}\r\n          processors={[\r\n            {\r\n              bufferSize: 2048,\r\n              hash: \"1234\",\r\n              process: e => {\r\n                const soundLevel = calculateSoundLevel(e);\r\n                EventHandler.trigger(SoundLevelChanged, soundLevel);\r\n\r\n                if (soundLevel > this.state.soundLevelThreshold) {\r\n                  const data = e.inputBuffer.getChannelData(0);\r\n                  const freq = detectFrequency(data, e.inputBuffer.sampleRate);\r\n                  const note = getNote(freq);\r\n                  const diff = note.centDiff(freq);\r\n\r\n                  this.props.audioProcessed(note, diff);\r\n                }\r\n              },\r\n            },\r\n          ]}\r\n        />\r\n        <AudioSettings\r\n          onDeviceChange={e => this.setState({ selectedDevice: e.target.value })}\r\n          selectedDevice={this.state.selectedDevice}\r\n          onThresholdChange={threshold => this.setState({ soundLevelThreshold: threshold })}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TunerAudio;\r\n","const TunerDivStyle = {\r\n  display: \"flex\",\r\n  flexDirection: \"row\",\r\n  justifyContent: \"center\",\r\n  width: \"100%\",\r\n};\r\n\r\nconst TunerCanvasSize = {\r\n  width: \"500px\",\r\n  height: \"75px\",\r\n};\r\n\r\nconst TunerDisplaySettings = {\r\n  minVal: -50,\r\n  maxVal: 50,\r\n  stepSize: 2.5,\r\n  widthPadding: 8,\r\n  font: \"Arial\",\r\n  fontSize: 12,\r\n  topPadding: 12 + 4,\r\n  strokeColor: \"#666666\",\r\n  lineWIdth: 2,\r\n};\r\n\r\nconst TunerPointerSettings = {\r\n  widthPadding: 8,\r\n  topPadding: 0,\r\n  strokeColor: \"#00aa00\",\r\n  pointerHeight: 15,\r\n  pointerWidth: 15,\r\n};\r\n\r\nexport { TunerCanvasSize, TunerDisplaySettings, TunerPointerSettings, TunerDivStyle };\r\n","import React from \"react\";\r\nimport uuid from \"react-uuid\";\r\n\r\nconst OverlayDivStyle = {\r\n  position: \"absolute\",\r\n  backgroundColor: \"rgba(255, 255, 255, 0.85)\",\r\n  zIndex: 2,\r\n  display: \"flex\",\r\n  alignItems: \"center\",\r\n  justifyContent: \"center\",\r\n};\r\n\r\nclass Overlay extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.uuid = uuid();\r\n    this.state = {};\r\n  }\r\n\r\n  componentDidMount() {\r\n    const wrapper = document.getElementById(this.uuid);\r\n    const br = wrapper.getBoundingClientRect();\r\n\r\n    if (this.state.boundingRect !== br) {\r\n      this.setState({ boundingRect: br });\r\n    }\r\n  }\r\n\r\n  calculateStyle = br => {\r\n    if (br === undefined) return {};\r\n\r\n    const { width, height } = br;\r\n    const style = {\r\n      ...OverlayDivStyle,\r\n      height: `${height}px`,\r\n      width: `${width}px`,\r\n    };\r\n    return style;\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {this.props.enabled && (\r\n          <div style={{ ...this.calculateStyle(this.state.boundingRect) }}>\r\n            <span>{this.props.message}</span>\r\n          </div>\r\n        )}\r\n        <div id={this.uuid}>{this.props.children}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Overlay;\r\n","import React from \"react\";\r\nimport Overlay from \"../Overlay/Overlay\";\r\n\r\nclass MicrophonePermissions extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { permissionsGranted: true };\r\n  }\r\n\r\n  componentDidMount() {\r\n    navigator.mediaDevices\r\n      .getUserMedia({ audio: true })\r\n      .then(() => {\r\n        this.setState({ permissionsGranted: true });\r\n      })\r\n      .catch(e => {\r\n        this.setState({ permissionsGranted: false });\r\n      });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Overlay message={this.props.message} enabled={!this.state.permissionsGranted}>\r\n        {this.props.children}\r\n      </Overlay>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MicrophonePermissions;\r\n","import React from \"react\";\r\nimport { Typography } from \"@material-ui/core\";\r\n\r\nimport { drawTunerDisplay, TunerDisplayCanvas } from \"./components/TunerDisplayCanvas\";\r\nimport { drawTunerPointer, TunerPointerCanvas } from \"./components/TunerPointerCanvas\";\r\nimport TunerAudio from \"./components/TunerAudio\";\r\n\r\nimport {\r\n  TunerCanvasSize,\r\n  TunerDisplaySettings,\r\n  TunerPointerSettings,\r\n  TunerDivStyle,\r\n} from \"./styles\";\r\nimport MicrophonePermissions from \"../../components/MicrophonePermissions/MicrophonePermissions\";\r\n\r\nconst TUNER_MICROPHONE_NO_PERMISSIONS_MESSAGE =\r\n  \"Please grant Microphone access to the app to use the Tuner\";\r\n\r\nclass Tuner extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { note: undefined, centDiff: undefined };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const canvas = document.getElementById(\"tunerDisplay\");\r\n    drawTunerDisplay(canvas, TunerDisplaySettings);\r\n  }\r\n\r\n  noteChanged = (note, centDiff) => {\r\n    const tunerPointerCanvas = document.getElementById(\"tunerPointer\");\r\n    const context = tunerPointerCanvas.getContext(\"2d\");\r\n    context.clearRect(0, 0, tunerPointerCanvas.width, tunerPointerCanvas.height);\r\n\r\n    this.setState({ note, centDiff });\r\n    drawTunerPointer(tunerPointerCanvas, centDiff, TunerPointerSettings);\r\n  };\r\n\r\n  getNoteString = () => {\r\n    if (this.state.note === undefined) return \"Note:\";\r\n    let centDiffStr = this.state.centDiff.toString();\r\n    const dotIndex = centDiffStr.indexOf(\".\");\r\n    if (dotIndex !== -1) {\r\n      centDiffStr = centDiffStr.substr(0, dotIndex + 4);\r\n    }\r\n    return `Note: ${this.state.note.name} off by ${centDiffStr}`;\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <MicrophonePermissions message={TUNER_MICROPHONE_NO_PERMISSIONS_MESSAGE}>\r\n        <div>\r\n          <Typography>{this.getNoteString()}</Typography>\r\n\r\n          <div style={TunerDivStyle}>\r\n            <div style={{ width: TunerCanvasSize.width }}>\r\n              <TunerDisplayCanvas width={TunerCanvasSize.width} height={TunerCanvasSize.height} />\r\n              <TunerPointerCanvas\r\n                width={TunerCanvasSize.width}\r\n                height={TunerPointerSettings.topPadding + TunerPointerSettings.pointerHeight}\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <TunerAudio audioProcessed={this.noteChanged} />\r\n        </div>\r\n      </MicrophonePermissions>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Tuner;\r\n","function timeToString(time) {\r\n  if (time === undefined || Number.isNaN(time)) {\r\n    return \"00:00:00\";\r\n  }\r\n\r\n  const diffInHrs = time / 3600000;\r\n  const hh = Math.floor(diffInHrs);\r\n\r\n  const diffInMin = (diffInHrs - hh) * 60;\r\n  const mm = Math.floor(diffInMin);\r\n\r\n  const diffInSec = (diffInMin - mm) * 60;\r\n  const ss = Math.floor(diffInSec);\r\n\r\n  const diffInMs = (diffInSec - ss) * 100;\r\n  const ms = Math.floor(diffInMs);\r\n\r\n  const formattedMM = mm.toString().padStart(2, \"0\");\r\n  const formattedSS = ss.toString().padStart(2, \"0\");\r\n  const formattedMS = ms.toString().padStart(2, \"0\");\r\n\r\n  return `${formattedMM}:${formattedSS}:${formattedMS}`;\r\n}\r\n\r\nexport default timeToString;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport timeToString from \"../utils\";\r\n\r\nclass Timer extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { elapsedTime: undefined };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.updateInterval = setInterval(this.calculateElapsedTime, 10);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    clearInterval(this.updateInterval);\r\n  }\r\n\r\n  calculateElapsedTime = () => {\r\n    const currentTime = Date.now();\r\n    const diff = currentTime - this.props.startTime;\r\n    this.setState({ elapsedTime: diff }, this.elapsedTimeChanged());\r\n  };\r\n\r\n  elapsedTimeChanged() {\r\n    if (this.props.elapsedTimeChanged !== undefined) {\r\n      this.props.elapsedTimeChanged(this.state.elapsedTime);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return <span style={{ textAlign: \"center\" }}>{timeToString(this.state.elapsedTime)}</span>;\r\n  }\r\n}\r\n\r\nTimer.propTypes = {\r\n  startTime: PropTypes.number,\r\n  elapsedTimeChanged: PropTypes.func,\r\n};\r\n\r\nTimer.defaultProps = {\r\n  startTime: undefined,\r\n  elapsedTimeChanged: undefined,\r\n};\r\n\r\nexport default Timer;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass Countdown extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { currentValue: 0 };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.countdownInterval = setInterval(this.updateValue, this.props.interval);\r\n    this.setState({ currentValue: this.props.start });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    clearInterval(this.countdownInterval);\r\n  }\r\n\r\n  updateValue = () => {\r\n    const { start, end } = this.props;\r\n    const { currentValue } = this.state;\r\n\r\n    const step = start > end ? -1 : 1;\r\n\r\n    if (this.state.currentValue !== end) {\r\n      const newValue = currentValue + step;\r\n\r\n      if (newValue === end) clearInterval(this.countdownInterval);\r\n\r\n      this.setState({ currentValue: newValue }, this.props.valueChanged(newValue));\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return <span style={{ textAlign: \"center\" }}>{this.state.currentValue}</span>;\r\n  }\r\n}\r\n\r\nCountdown.propTypes = {\r\n  start: PropTypes.number,\r\n  end: PropTypes.number,\r\n  interval: PropTypes.number,\r\n  valueChanged: PropTypes.func,\r\n};\r\n\r\nCountdown.defaultProps = {\r\n  start: undefined,\r\n  end: 0,\r\n  interval: 1000,\r\n  valueChanged: () => {},\r\n};\r\n\r\nexport default Countdown;\r\n","const ListViewStyle = {\r\n  display: \"flex\",\r\n  flexDirection: \"column\",\r\n  overflowY: \"auto\",\r\n  overflowX: \"hidden\",\r\n};\r\n\r\nexport default ListViewStyle;\r\n","import React from \"react\";\r\nimport uuid from \"react-uuid\";\r\nimport ListViewStyle from \"./styles\";\r\n\r\nclass ListView extends React.Component {\r\n  render() {\r\n    return (\r\n      <div style={{ ...this.props.style, ...ListViewStyle }} className=\"scrollbar\">\r\n        {this.props.items.map(i => (\r\n          <div key={uuid()}>{i}</div>\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ListView;\r\n","import React from \"react\";\r\nimport AudioInput from \"../../../components/AudioInput/AudioInput\";\r\nimport AudioSettings from \"../../../components/AudioSettings/AudioSettings\";\r\nimport detectFrequency from \"../../../logic/PitchDetectors/AutoCorrelation\";\r\nimport { getNote } from \"../../../logic/Notes\";\r\nimport EventHandler from \"../../../events/EventHandler\";\r\nimport SoundLevelChanged from \"../../../events/Events\";\r\nimport { calculateSoundLevel } from \"../../../logic/utils\";\r\n\r\nclass NotePracticeAudio extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { selectedDevice: \"\", soundLevelThreshold: 0.2 };\r\n    this.soundLevel = 0;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <AudioInput\r\n          selectedDevice={this.state.selectedDevice}\r\n          processors={[\r\n            {\r\n              bufferSize: 2048,\r\n              hash: \"1235\",\r\n              process: e => {\r\n                const soundLevel = calculateSoundLevel(e);\r\n                EventHandler.trigger(SoundLevelChanged, soundLevel);\r\n\r\n                if (soundLevel > this.state.soundLevelThreshold) {\r\n                  const data = e.inputBuffer.getChannelData(0);\r\n                  const freq = detectFrequency(data, e.inputBuffer.sampleRate);\r\n                  const note = getNote(freq);\r\n\r\n                  this.props.audioProcessed(note);\r\n                }\r\n              },\r\n            },\r\n          ]}\r\n        />\r\n        <AudioSettings\r\n          onDeviceChange={e => this.setState({ selectedDevice: e.target.value })}\r\n          selectedDevice={this.state.selectedDevice}\r\n          onThresholdChange={threshold => this.setState({ soundLevelThreshold: threshold })}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NotePracticeAudio;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\n\r\nconst BaseButton = styled.button`\r\n  outline: none;\r\n  border: none;\r\n  border-radius: 2px;\r\n  background-color: rgba(0, 0, 0, 0);\r\n  font-family: \"Roboto\";\r\n  font-size: 1.2rem;\r\n  padding: 16px;\r\n  box-shadow: 0px 2px 2px rgba(60, 60, 60, 0.25);\r\n\r\n  &:hover {\r\n    background-color: rgba(182, 182, 182, 0.25);\r\n    cursor: pointer;\r\n  }\r\n\r\n  &:active {\r\n    background-color: rgba(182, 182, 182, 0.75);\r\n  }\r\n`;\r\n\r\nclass Button extends React.Component {\r\n  render() {\r\n    return (\r\n      <BaseButton\r\n        disabled={this.props.disabled}\r\n        type=\"button\"\r\n        onClick={e => this.props.onClick(e)}\r\n        style={{ ...this.props.style }}\r\n      >\r\n        {this.props.text}\r\n      </BaseButton>\r\n    );\r\n  }\r\n}\r\n\r\nButton.propTypes = {\r\n  text: PropTypes.string,\r\n  onClick: PropTypes.func,\r\n  disabled: PropTypes.bool,\r\n  // eslint-disable-next-line react/forbid-prop-types\r\n  style: PropTypes.object,\r\n};\r\n\r\nButton.defaultProps = {\r\n  text: \"\",\r\n  onClick: () => {},\r\n  disabled: false,\r\n  style: {},\r\n};\r\n\r\nexport default Button;\r\n","import React from \"react\";\r\nimport { Typography } from \"@material-ui/core\";\r\nimport Timer from \"../../components/Timer/Timer\";\r\nimport { Notes } from \"../../logic/Notes\";\r\nimport Countdown from \"../../components/Countdown/Countdown\";\r\nimport ListView from \"../../components/ListView/ListView\";\r\nimport NotePracticeAudio from \"./components/NotePracticeAudio\";\r\nimport { getRandomNote } from \"../../logic/utils\";\r\nimport Button from \"../../components/Button/Button\";\r\nimport timeToString from \"../../components/utils\";\r\nimport MicrophonePermissions from \"../../components/MicrophonePermissions/MicrophonePermissions\";\r\n\r\nconst NOTE_PRACTICE_MICROPHONE_NO_PERMISSIONS_MESSAGE =\r\n  \"Please grant Microphone access to the app to use the Note Practice tool\";\r\n\r\nclass NotePractice extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      currentNote: getRandomNote(Notes, false),\r\n      starting: false,\r\n      stopped: true,\r\n      notesHit: [],\r\n      lastElapsedTime: undefined,\r\n      startTime: Date.now(),\r\n    };\r\n\r\n    this.noteDetectedLock = false;\r\n  }\r\n\r\n  getNoteSwitcher() {\r\n    if (this.state.stopped && this.state.starting) {\r\n      return (\r\n        <Countdown\r\n          start={3}\r\n          valueChanged={value => {\r\n            if (value === 0) this.start();\r\n          }}\r\n        />\r\n      );\r\n    }\r\n    if (!this.state.stopped) {\r\n      return (\r\n        <>\r\n          <Timer\r\n            startTime={this.state.startTime}\r\n            elapsedTimeChanged={time => this.setState({ lastElapsedTime: time })}\r\n          />\r\n          <Typography variant=\"h1\" align=\"center\">\r\n            {this.state.currentNote.baseNoteName()}\r\n          </Typography>\r\n        </>\r\n      );\r\n    }\r\n\r\n    return <></>;\r\n  }\r\n\r\n  noteDetected = note => {\r\n    const { currentNote, lastElapsedTime, notesHit } = this.state;\r\n\r\n    if (this.state.stopped || lastElapsedTime <= 50) {\r\n      // 50ms is too fast - probably an event doubling up\r\n      return;\r\n    }\r\n\r\n    if (note.baseNoteName() === currentNote.baseNoteName()) {\r\n      notesHit.push({ note, time: lastElapsedTime });\r\n      this.setState({ notesHit, currentNote: getRandomNote(Notes, false), startTime: Date.now() });\r\n    }\r\n  };\r\n\r\n  notesHitList = () => {\r\n    return this.state.notesHit\r\n      .map((noteHit, index) => {\r\n        return (\r\n          <span style={{ whiteSpace: \"pre\", fontFamily: \"Roboto Mono\" }}>\r\n            {String(index + 1).padEnd(3)} {noteHit.note.baseNoteName().padEnd(3)}{\" \"}\r\n            {timeToString(noteHit.time, true)}\r\n          </span>\r\n        );\r\n      })\r\n      .reverse();\r\n  };\r\n\r\n  controlButtonClicked = () => {\r\n    if (this.state.stopped) {\r\n      this.setState({ stopped: true, starting: true });\r\n    } else {\r\n      this.stop();\r\n    }\r\n  };\r\n\r\n  start = () => {\r\n    this.setState({\r\n      stopped: false,\r\n      starting: false,\r\n      lastElapsedTime: undefined,\r\n      startTime: Date.now(),\r\n      currentNote: getRandomNote(Notes, false),\r\n    });\r\n  };\r\n\r\n  stop = () => {\r\n    this.setState({ stopped: true, starting: false, currentNote: undefined });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <MicrophonePermissions message={NOTE_PRACTICE_MICROPHONE_NO_PERMISSIONS_MESSAGE}>\r\n        <div>\r\n          <NotePracticeAudio audioProcessed={this.noteDetected} />\r\n          <br />\r\n          <hr />\r\n          <br />\r\n          <div>\r\n            <Typography variant=\"h6\">Note Practice</Typography>\r\n            <br />\r\n            <div style={{ display: \"flex\", flexDirection: \"row\" }}>\r\n              <div style={{ paddingLeft: \"16px\", paddingRight: \"16px\" }}>\r\n                <span style={{ fontFamily: \"Roboto\" }}>Notes Hit:</span>\r\n                <ListView\r\n                  items={this.notesHitList()}\r\n                  style={{ height: \"500px\", maxHeight: \"500px\" }}\r\n                />\r\n              </div>\r\n              <div\r\n                style={{\r\n                  display: \"flex\",\r\n                  flexDirection: \"column\",\r\n                  flexGrow: 3,\r\n                }}\r\n              >\r\n                <div style={{ display: \"flex\", justifyContent: \"space-evenly\" }}>\r\n                  <Button\r\n                    text={this.state.stopped ? \"Start\" : \"Stop\"}\r\n                    onClick={() => this.controlButtonClicked()}\r\n                  />\r\n                </div>\r\n                <br />\r\n                <div\r\n                  style={{\r\n                    display: \"flex\",\r\n                    flexDirection: \"column\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                >\r\n                  {this.getNoteSwitcher()}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </MicrophonePermissions>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NotePractice;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faGuitar, faMusic } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst SidebarButtons = {\r\n  Tuner: \"tuner\",\r\n  NotePractice: \"note_practice\",\r\n};\r\n\r\nconst SidebarButton = styled.button`\r\n  height: 64px;\r\n  width: 64px;\r\n  background-color: #ffffff;\r\n  border: none;\r\n  outline: none;\r\n\r\n  &:hover,\r\n  &.activeSidebarButton {\r\n    background-color: #be4bdb;\r\n\r\n    .sidebarButtonIcon {\r\n      color: #ffffff;\r\n    }\r\n  }\r\n`;\r\n\r\nconst SidebarButtonIcon = styled(FontAwesomeIcon).attrs(props => ({\r\n  ...props,\r\n  className: \"sidebarButtonIcon\",\r\n}))`\r\n  && {\r\n    height: 36px;\r\n    width: 36px;\r\n  }\r\n  color: #be4bdb;\r\n`;\r\n\r\nclass Sidebar extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { activeButton: SidebarButtons.Tuner };\r\n  }\r\n\r\n  buttonClicked = key => {\r\n    this.setState({ activeButton: key });\r\n    this.props.selectionChanged(key);\r\n  };\r\n\r\n  getButtonClassName = key => {\r\n    if (key === this.state.activeButton) {\r\n      return \"activeSidebarButton\";\r\n    }\r\n    return \"\";\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n          borderRight: \"1px solid #ededed\",\r\n          borderRadius: \"4px\",\r\n        }}\r\n      >\r\n        <SidebarButton\r\n          className={this.getButtonClassName(SidebarButtons.Tuner)}\r\n          onClick={() => this.buttonClicked(SidebarButtons.Tuner)}\r\n        >\r\n          <SidebarButtonIcon icon={faGuitar} />\r\n        </SidebarButton>\r\n        <SidebarButton\r\n          className={this.getButtonClassName(SidebarButtons.NotePractice)}\r\n          onClick={() => this.buttonClicked(SidebarButtons.NotePractice)}\r\n        >\r\n          <SidebarButtonIcon icon={faMusic} />\r\n        </SidebarButton>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport { Sidebar, SidebarButtons };\r\n","import React from \"react\";\r\nimport { Paper, Container } from \"@material-ui/core\";\r\nimport styled from \"styled-components\";\r\nimport Tuner from \"../../apps/Tuner/Tuner\";\r\nimport NotePractice from \"../../apps/NotePractice/NotePractice\";\r\nimport { Sidebar, SidebarButtons } from \"../../components/Sidebar/Sidebar\";\r\n\r\nconst PaddedContainer = styled(Container)`\r\n  padding: 16px 16px;\r\n`;\r\n\r\nclass MainPage extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { activeButton: SidebarButtons.Tuner };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <PaddedContainer>\r\n        <Paper>\r\n          <div style={{ display: \"flex\", flexDirection: \"row\" }}>\r\n            <Sidebar selectionChanged={activeButton => this.setState({ activeButton })} />\r\n            <div\r\n              style={{\r\n                position: \"relative\",\r\n                flexGrow: 1,\r\n                marginLeft: \"16px\",\r\n                padding: \"16px 16px\",\r\n              }}\r\n            >\r\n              {this.state.activeButton === SidebarButtons.Tuner && <Tuner />}\r\n              {this.state.activeButton === SidebarButtons.NotePractice && <NotePractice />}\r\n            </div>\r\n          </div>\r\n        </Paper>\r\n      </PaddedContainer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MainPage;\r\n","import React from \"react\";\r\nimport MainPage from \"./pages/MainPage/MainPage\";\r\n\r\nfunction App() {\r\n  return <MainPage />;\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}